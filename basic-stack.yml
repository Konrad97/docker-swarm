version: '3.7'

# TODO healthcheck
# TODO zero downtime deploy with update_config, rollback_config, restart_policy
# TODO install global drivers

services:

  traefik:
    image: traefik
    command:
      - "--api.dashboard=true"

      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.network=traefik"

      - "--entrypoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"

      # - "--certificatesResolvers.cert-resolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.cert-resolver.acme.email=melzerkonrad1@gmail.com"
      - "--certificatesResolvers.cert-resolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.cert-resolver.acme.httpchallenge=true"
      - "--certificatesResolvers.cert-resolver.acme.httpChallenge.entryPoint=web"

    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "letsencrypt:/letsencrypt"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true

        # Redirect all http traffic to https
        - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
        - traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)
        - traefik.http.routers.https-redirect.middlewares=redirect-to-https
        - traefik.http.routers.https-redirect.entrypoints=web

        # Redirect all traffic on hostname traefik.konradmelzer.de to traefik dashboard
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.traefik.rule=Host(`traefik.konradmelzer.de`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.routers.traefik.tls=true
        - traefik.http.routers.traefik.tls.certresolver=cert-resolver
        - traefik.http.routers.traefik.entrypoints=websecure

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
      - traefik
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true

        # Redirect all traffic on hostname portainer.konradmelzer.de to portainer dashboard
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.routers.portainer.rule=Host(`portainer.konradmelzer.de`)
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver=cert-resolver
        - traefik.http.routers.portainer.entrypoints=websecure

  # TODO add basic auth
  registry:
    image: registry
    volumes:
      - registry:/var/lib/registry
    networks:
      - traefik
    deploy:
      mode: replicated
      replicas: 1
      placement:
        # TODO registry should only exist once! There could be multiple manager nodes in the future
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true

        # Redirect all traffic on hostname registry.konradmelzer.de to registry
        - traefik.http.services.registry.loadbalancer.server.port=5000
        - traefik.http.routers.registry.rule=Host(`registry.konradmelzer.de`)
        - traefik.http.routers.registry.tls=true
        - traefik.http.routers.registry.tls.certresolver=cert-resolver
        - traefik.http.routers.registry.entrypoints=websecure

volumes:
  portainer_data:
  letsencrypt:
  registry:

networks:
  agent_network:
    driver: overlay
    attachable: true
  traefik:
    name: traefik
    driver: overlay
